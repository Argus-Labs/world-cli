// Code generated by MockGen. DO NOT EDIT.
// Source: utils/dependency/dependency.go
//
// Generated by this command:
//
//	mockgen -source utils/dependency/dependency.go -destination utils/dependency/mock/dependency.go
//

// Package mock_dependency is a generated GoMock package.
package mock_dependency

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockDependency is a mock of Dependency interface.
type MockDependency struct {
	ctrl     *gomock.Controller
	recorder *MockDependencyMockRecorder
}

// MockDependencyMockRecorder is the mock recorder for MockDependency.
type MockDependencyMockRecorder struct {
	mock *MockDependency
}

// NewMockDependency creates a new mock instance.
func NewMockDependency(ctrl *gomock.Controller) *MockDependency {
	mock := &MockDependency{ctrl: ctrl}
	mock.recorder = &MockDependencyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDependency) EXPECT() *MockDependencyMockRecorder {
	return m.recorder
}

// Check mocks base method.
func (m *MockDependency) Check() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Check")
	ret0, _ := ret[0].(error)
	return ret0
}

// Check indicates an expected call of Check.
func (mr *MockDependencyMockRecorder) Check() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Check", reflect.TypeOf((*MockDependency)(nil).Check))
}

// GetHelp mocks base method.
func (m *MockDependency) GetHelp() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHelp")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetHelp indicates an expected call of GetHelp.
func (mr *MockDependencyMockRecorder) GetHelp() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHelp", reflect.TypeOf((*MockDependency)(nil).GetHelp))
}

// GetName mocks base method.
func (m *MockDependency) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockDependencyMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockDependency)(nil).GetName))
}

// Run mocks base method.
func (m *MockDependency) Run() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Run")
	ret0, _ := ret[0].(error)
	return ret0
}

// Run indicates an expected call of Run.
func (mr *MockDependencyMockRecorder) Run() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockDependency)(nil).Run))
}
